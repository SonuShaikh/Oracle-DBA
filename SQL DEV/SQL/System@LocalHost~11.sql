SET SERVEROUPUT ON;
 CREATE OR REPLACE TRIGGER superheros_Audit
 BEFORE INSERT OR DELETE OR UPDATE ON superheros
 FOR EACH ROW
 ENABLE
 DECLARE
 v_user VARCHAR2(30);
 v_date VARCHAR2(30);
 BEGIN
 SELECT USER, TO_CHAR(SYSDATE,'DD/MON/YYYY HH24:MI:SS' ) INTO v_user, v_date from DUAL;
 IF INSERTING THEN
       INSERT INTO sh_audit(new_name,old_name,user_name,entry_date,operation)
       VALUES(:NEW.sh_name, NULL,v_user,v_date,'Inserting');
 ELSIF DELETING THEN
      INSERT INTO sh_audit(new_name, old_name,user_name,entry_date,operation)
      VALUES (NULL, :OLD.sh_name,v_user,v_date,'Deleting');
 ELSIF UPDATING THEN
      INSERT INTO sh_audit(new_name,old_name,user_name,entry_date,operation)
      VALUES(:NEW.sh_name,:OLD.sh_name,v_user,v_date,'UPDATING');
  END IF;
  END;
  /
  
  GRANT CREATE ANY TRIGGER TO HR;
  
  
  INSERT INTO SUPERHEROS VALUES('SONU SHAIKH');
  SELECT * FROM SH_AUDIT;
  UPDATE SUPERHEROS SET SH_NAME = 'SALMAN' WHERE SH_NAME= 'SONU SHAIKH';
  
  
  DELETE FROM SUPERHEROS WHERE SH_NAME = 'SALMAN';
  
  SELECT * FROM SUPERHEROS;
  
CREATE TABLE SUPERHEROS_BACKUP AS SELECT * FROM SUPERHEROS WHERE 1=2;
  /
  CREATE OR REPLACE TRIGGER sh_backup
  BEFORE INSERT OR DELETE OR UPDATE ON SUPERHEROS
  FOR EACH ROW
  ENABLE
  BEGIN
  IF INSERTING THEN
     INSERT INTO SUPERHEROS_BACKUP(sh_name) VALUES(:NEW.sh_name);
  ELSIF DELETING THEN
     DELETE FROM SUPERHEROS_BACKUP WHERE sh_name = :OLD.sh_name;
  ELSIF UPDATING THEN
     UPDATE SUPERHEROS_BACKUP SET sh_name = :NEW.sh_name WHERE sh_name = :NEW.sh_name;
     
     END IF;
     END;
     /
  

SELECT * FROM SUPERHEROS_BACKUP;
SELECT * FROM SUPERHEROS;
SELECT * FROM SH_AUDIT;
INSERT INTO SUPERHEROS VALUES( 'SPIDER MAN');
DELETE FROM SUPERHEROS WHERE sh_name = 'WOODLAND';
UPDATE SUPERHEROS SET sh_name = 'WOODLAND' WHERE sh_name = 'SPIDER MAN';





-- DML TRIGGER 